name: buildwheels

on:
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-14, macos-latest]
        os: [windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      # - name: Provide gfortran (Windows)
      #   if: runner.os == 'Windows'
      #   uses: msys2/setup-msys2@v2

      # - name: Tell distutils to use mingw (Windows)
      #   if: runner.os == 'Windows'
      #   run: |
      #     echo "[build]`ncompiler=mingw32" | Out-File -Encoding ASCII ~/pydistutils.cfg

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - if: matrix.platform == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: false
          install: >-
            mingw-w64-x86_64-gcc-fortran
            mingw-w64-x86_64-ninja
            m4

      - if: matrix.platform == 'windows-latest'
        run: |
          echo CMAKE_ARGS="-DCMAKE_MAKE_PROGRAM=D:/a/_temp/msys64/mingw64/bin/ninja.exe" >> $GITHUB_ENV
          echo CMAKE_PROGRAM_PATH="D:/a/_temp/msys64/usr/bin" >> $GITHUB_ENV
          echo CMAKE_GENERATOR="Ninja" >> $GITHUB_ENV
          echo TEMP="D:/a/_temp/" >> $GITHUB_ENV
      
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.23.2

      - name: Build wheels
        env:
          CIBW_SKIP: pp* *-win32 *-manylinux_i686
          CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel show {wheel} && delvewheel repair -w {dest_dir} {wheel} --no-mangle-all"
          CIBW_ENVIRONMENT_WINDOWS: CC=gcc CXX=g++ Fortran_path="C:/MinGW/bin/gfortran.exe"
          # CIBW_BEFORE_BUILD_WINDOWS: CMAKE_Fortran_COMPILER="C:/MinGW/bin/gfortran.exe"
          # CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel show {wheel} && delvewheel repair -w {dest_dir} {wheel} --no-mangle-all"
        run: python -m cibuildwheel --output-dir dist

      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{matrix.platform}}-${{matrix.manylinux}}-${{matrix.python-version}}
          path: dist

